name: Build - Windows - Solution

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths: ["src/**"]
  push:
    branches: [main]
    paths: ["src/**"]

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: "-j 2"

jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        buildtype: [Debug]
        triplet:  [x64-windows]

    steps:
    - uses: actions/checkout@v4
    - uses: microsoft/setup-msbuild@v1.1

    - name: Compute vcpkg.json hash
      id: hash
      shell: pwsh
      run: |
        $bytes  = [System.Text.Encoding]::UTF8.GetBytes((Get-Content vcpkg.json -Raw))
        $sha256 = [System.Security.Cryptography.SHA256]::Create().ComputeHash($bytes)
        $hash   = [BitConverter]::ToString($sha256) -replace '-', ''
        "hash=$hash" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

    - name: Cache vcpkg artifacts
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}\vcpkg\installed
          ${{ github.workspace }}\vcpkg\buildtrees
          ${{ github.workspace }}\vcpkg\downloads
        key: vcpkg-${{ matrix.triplet }}-${{ steps.hash.outputs.hash }}
        restore-keys: |
          vcpkg-${{ matrix.triplet }}-

    - name: Clone + bootstrap vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat

    - name: Resolve manifest deps
      run: |
        .\vcpkg.exe install --triplet x64-windows `
            "--x-manifest-root=${{ github.workspace }}" `
            --feature-flags=manifests,registries
      working-directory: vcpkg

    - name: MSBuild (manifest mode)
      run: msbuild.exe vc17/otclient.sln /m /p:Configuration=Debug /p:Platform=x64 /p:VcpkgEnableManifest=true /p:VcpkgRoot=${{ github.workspace }}\vcpkg

    - name: Prepare & upload artifacts
      shell: pwsh
      run: |
        $out = "$env:GITHUB_WORKSPACE\artifacts"
        New-Item -ItemType Directory -Force -Path $out | Out-Null
        Get-ChildItem -Recurse -Filter "otclient*.exe","*.dll" |

    - uses: actions/upload-artifact@v4
      with:
        name: otclient-${{ matrix.buildtype }}
        path: artifacts
